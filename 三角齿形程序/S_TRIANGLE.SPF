PROC S_TRIANGLE SBLOF DISPLOF
;三角

DEF  REAL DR1
DEF  REAL DR2
DEF  REAL DR3
DEF  REAL DR4
DEF  REAL DR5
DEF  REAL DR6
DEF  REAL DR7
DEF  REAL DR8
DEF  REAL DR9
DEF  REAL DR10
DEF  REAL DR11
DEF  REAL DR12
DEF  REAL DR13
DEF  REAL DR14
DEF  REAL DR15
DEF  REAL DR16
DEF  REAL DR17
DEF  REAL DR18
DEF  REAL DR19 
DEF  REAL DRES_RR,TRIANGLE_RND_RR,TRIANGLE_ANG,XUNICHIGAO
DEF AXIS AX_W,AX_V
AX_W=AXNAME(AXIS_HORI)  
AX_V=AXNAME(AXIS_VER)

BEGAIN:
XUNICHIGAO=TRI[0]+DRES_RR
DR1=(DRES_RR+TRIANGLE_RND_RR)*COS(TRIANGLE_ANG);
DR2=(DRES_RR+TRIANGLE_RND_RR)*SIN(TRIANGLE_ANG)-TRIANGLE_RND_RR;
DR3=-(DRES_RR+TRIANGLE_RND_RR)*COS(TRIANGLE_ANG);
DR4=(DRES_RR+TRIANGLE_RND_RR)*SIN(TRIANGLE_ANG)-TRIANGLE_RND_RR;
DR5=(XUNICHIGAO+DR2-DRES_RR)*TAN(TRIANGLE_ANG)-(TRI[5]-DRES_RR)*TAN(45-TRIANGLE_ANG/2)*SIN(TRIANGLE_ANG)+DR1
DR6=DRES_RR+(TRI[5]-DRES_RR)*TAN(45-TRIANGLE_ANG/2)*COS(TRIANGLE_ANG)-XUNICHIGAO
DR7=DR3-((XUNICHIGAO+DR4-DRES_RR)*TAN(TRIANGLE_ANG)-(TRI[6]-DRES_RR)*TAN(45-TRIANGLE_ANG/2)*SIN(TRIANGLE_ANG))
DR8=DRES_RR+(TRI[6]-DRES_RR)*TAN(45-TRIANGLE_ANG/2)*COS(TRIANGLE_ANG)-XUNICHIGAO
DR9=DR5+(TRI[5]-DRES_RR)*TAN(45-TRIANGLE_ANG/2)
DR10=DRES_RR-XUNICHIGAO
DR11=DR7-(TRI[6]-DRES_RR)*TAN(45-TRIANGLE_ANG/2)
;DR12=DR9-TRI[5]-DRES_RR*SIN(15)
;DR13=DR11+TRI[6]+DRES_RR*SIN(15)
DR14=0
DR15=DRES_RR
DR16=(DRESSER[22]/2+2)
DR17=DRES_RR-(DR16-DR9)*TAN(30)-XUNICHIGAO
DR18=-(DRESSER[22]/2+2)
END:DR19=DRES_RR-(DR11-DR18)*TAN(30)-XUNICHIGAO

DRES_RR=DRESSER[31];金刚滚轮半径
TRIANGLE_RND_RR=TRI[3];左半圆
TRIANGLE_ANG=TRI[9];当前左角
REPEAT BEGAIN END P=1 ;左侧参数重新计算

TRANS AX[AX_W]=DRESSER[33] AX[AX_V]=WHEEL[10]
G0 AX[AX_V]=DR15 F=DRESSER[10]
G0   AX[AX_W]=5
STOPRE  
G01 AX[AX_W]=DR14 AX[AX_V]=DR15 F=DRESSER[10]
G03 AX[AX_W]=DR1 AX[AX_V]=DR2 CR=(TRIANGLE_RND_RR+DRES_RR)
G01 AX[AX_W]=DR5 AX[AX_V]=DR6
IF(TRI[5]>DRES_RR)  
G02 AX[AX_W]=DR9 AX[AX_V]=DR10 CR=(TRI[5]-DRES_RR)
ENDIF
G01 AX[AX_W]=DR16 AX[AX_V]=DR17  
TRANS

DRES_RR=DRESSER[32]
TRIANGLE_RND_RR=TRI[4]
TRIANGLE_ANG=TRI[10]
REPEAT BEGAIN END P=1;右侧参数重新计算

TRANS AX[AX_W]=DRESSER[34] AX[AX_V]=WHEEL[11]
G0 AX[AX_V]=DR15 F=DRESSER[10]
STOPRE 
G01 AX[AX_W]=DR14 AX[AX_V]=DR15 F=DRESSER[10]
G02 AX[AX_W]=DR3 AX[AX_V]=DR4 CR=(TRIANGLE_RND_RR+DRES_RR)
G01 AX[AX_W]=DR7 AX[AX_V]=DR8
IF(TRI[6]>DRES_RR)  
G03 AX[AX_W]=DR11 AX[AX_V]=DR10 CR=(TRI[6]-DRES_RR)
ENDIF
G01 AX[AX_W]=DR18 AX[AX_V]=DR19
TRANS

RET